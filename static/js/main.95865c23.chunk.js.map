{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","console","log","getReorderedGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuBE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBA,IAAMC,EAjCD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAKzB,OAFAE,QAAQC,IAAIP,EAAUE,GAEfG,EAwBOG,CAAkBZ,EAAiB,CAAEM,aAAYF,aAiB/D,OAfAI,EAAMK,MAAK,SAACC,EAAGC,GACb,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITb,GACFE,EAAMY,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAtCR,WACEjB,EAAYN,EAASiB,WAsCfO,KAAK,SACLF,UAAWG,IAAW,iBAAkB,CACtC,WAAYpB,IAAaL,EAASiB,WAJtC,iCAUA,wBACEM,QA5CR,WACEjB,EAAYN,EAASmB,SA4CfK,KAAK,SACLF,UAAWG,IAAW,oBAAqB,CACzC,WAAYpB,IAAaL,EAASmB,SAJtC,4BAUA,wBACEI,QA7CR,WACEf,GAAeD,IA6CTiB,KAAK,SACLF,UAAWG,IAAW,oBAAqB,CACzC,YAAalB,IAJjB,sBAWGF,IAAaL,EAASI,MAAQG,IAC7B,wBACEgB,QA9DZ,WACEjB,EAAYN,EAASI,MACrBI,GAAc,IA6DJgB,KAAK,SACLF,UAAU,4BAHZ,sBAWN,6BACE,6BACGb,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC7HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95865c23.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype Options = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: Options,\n) {\n  const visibleGoods = [...goods];\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  function sortByAlphabet() {\n    setSortType(SortType.ALPHABET);\n  }\n\n  function sortByLength() {\n    setSortType(SortType.LENGTH);\n  }\n\n  function reset() {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  }\n\n  function reverse() {\n    setIsReversed(!isReversed);\n  }\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  goods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAlphabet}\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed) && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}